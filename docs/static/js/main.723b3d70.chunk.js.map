{"version":3,"sources":["reducers/postsReducer.js","reducers/infoPostReducer.js","reducers/index.js","actions/postsAction.js","actions/infoPostAction.js","components/Navbar.js","components/theme.js","components/MediaCard.js","pages/BodyPage.js","components/Error.js","components/Contact.js","pages/PostPage.js","components/Error404.js","App.js","serviceWorker.js","index.js"],"names":["initialState","posts","loading","hasErrors","info","rootReducer","combineReducers","state","action","type","payload","navBarStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","handleChange","classes","React","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","e","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","to","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","name","value","onChange","createMuiTheme","primary","main","indigo","useStyles","maxWidth","textTransform","margin","media","MediaCard","post","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","CardActions","Button","size","gridItem","textAlign","connect","dispatch","filteredPosts","setFilteredPosts","nextPage","setNextPage","useEffect","a","fetch","response","json","data","results","filter","toLowerCase","includes","fetchCharacters","concat","console","log","Grid","container","justify","grid","style","fontSize","length","map","item","key","fullWidth","marginBottom","Error","mensaje","formStyles","form","borderColor","Contact","email","message","setData","error","setError","target","onSubmit","preventDefault","trim","TextField","label","autoFocus","multiline","submit","header","content","marginTop","useParams","status","species","gender","origin","values","push","nameOrigin","fetchInfoPosts","Avatar","src","alt","Error404","App","setSearch","ThemeProvider","exact","path","children","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.723b3d70.chunk.js","sourcesContent":["// Inicializo lo que voy a consumir (en este caso los post de la API)\r\n// API: https://jsonplaceholder.typicode.com/posts\r\n/*\r\n-Actualizan el estado de acuerdo a las acciones.-\r\n\r\nUn reducers es una función que toma dos\r\nparámetros: \"state\" y \"action\". \r\nGeneralmente va a consistir en una declaración switch\r\nque pasa por todos los tipos de acción\r\nposibles.\r\n*/\r\n\r\n// Importo las actions\r\nimport * as actions from \"../actions/postsAction\";\r\n\r\n// Creo un objeto como estado\r\nexport const initialState = {\r\n  posts: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\n// Funcion reducer\r\nexport default function postsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POSTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POSTS_SUCCESS:\r\n      return { posts: action.payload, loading: false, hasErrors: false };\r\n    case actions.GET_POSTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/infoPostAction\";\r\n\r\nexport const initialState = {\r\n  info: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function infoPostReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_INFO:\r\n      return { ...state, loading: true };\r\n    case actions.GET_INFO_SUCCESS:\r\n      return { info: action.payload, loading: false, hasErrors: false };\r\n    case actions.GET_INFO_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n// Por cada dato que traigo hago un archivo especifico\r\nimport postsReducer from \"./postsReducer\";\r\nimport infoPostReducer from \"./infoPostReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  info: infoPostReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// Creo las \"actions types\"\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\r\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\r\n\r\n// Creo las \"actions creators\" que retornen una accion.\r\n// Son funciones que crean acciones.\r\nexport const getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nexport const getPostsSuccess = (posts) => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const getPostsFailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n\r\n// Despacho.\r\n//Consumiendo una API desde determinado componente en un useEffect. (se ejecuta primero)\r\nexport function fetchPosts() {\r\n  return async (dispatch) => {\r\n    dispatch(getPosts());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://rickandmortyapi.com/api/character/\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      dispatch(getPostsSuccess(data.results));\r\n    } catch (error) {\r\n      dispatch(getPostsFailure());\r\n    }\r\n  };\r\n}\r\n","export const GET_INFO = \"GET_INFO\";\r\nexport const GET_INFO_SUCCESS = \"GET_INFO_SUCCESS\";\r\nexport const GET_INFO_FAILURE = \"GET_INFO_FAILURE\";\r\n\r\nexport const getInfoPosts = () => ({\r\n  type: GET_INFO,\r\n});\r\n\r\nexport const getInfoPostsSuccess = (info) => ({\r\n  type: GET_INFO_SUCCESS,\r\n  payload: info,\r\n});\r\n\r\nexport const getInfoPostsFailure = () => ({\r\n  type: GET_INFO_FAILURE,\r\n});\r\n\r\nexport function fetchInfoPosts(id) {\r\n  return async (dispatch) => {\r\n    dispatch(getInfoPosts());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://rickandmortyapi.com/api/character/${id}`\r\n      );\r\n      const data = await response.json();\r\n      dispatch(getInfoPostsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getInfoPostsFailure());\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst navBarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = ({ handleChange, search }) => {\r\n  const classes = navBarStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <>\r\n              <MenuIcon onClick={handleClick} />\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link to=\"/\">Inicio</Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link to=\"/contact\">Contacto</Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </>\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Posts - Rick &amp; Morty\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Bucar...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              name=\"search\"\r\n              value={search}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: indigo[700],\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    \"& .MuiTypography-gutterBottom\": {\r\n      textTransform: \"uppercase\",\r\n    },\r\n    margin: \"0 auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nfunction MediaCard({ post }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={post.image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {post.name}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Compartir\r\n        </Button>\r\n\r\n        <Link to={`/${post.id}`}>\r\n          <Button size=\"small\" color=\"primary\" variant=\"contained\">\r\n            Leer más...\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MediaCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MediaCard from \"../components/MediaCard\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// Conectar mi componente con la store\r\nimport { connect } from \"react-redux\";\r\n// Traigo los datos de la API\r\nimport { fetchPosts } from \"../actions/postsAction\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"40px auto 0 auto\",\r\n    width: \"80%\",\r\n  },\r\n  gridItem: {\r\n    margin: \"15px\",\r\n    width: \"400px\",\r\n    height: \"400px\",\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst BodyPage = ({ dispatch, posts, loading, hasErrors, search }) => {\r\n  const classes = useStyles();\r\n\r\n  const [filteredPosts, setFilteredPosts] = useState([]);\r\n  const [nextPage, setNextPage] = useState(1);\r\n\r\n  // Datos del store\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  // Escucho cambios en \"search\" y \"Posts\"\r\n  useEffect(() => {\r\n    setFilteredPosts(\r\n      posts.filter((post) => {\r\n        return post.name.toLowerCase().includes(search.toLowerCase());\r\n      })\r\n    );\r\n  }, [search, posts]);\r\n\r\n  // UseEffect para la siguiente pagina\r\n  useEffect(() => {\r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  const fetchCharacters = async () => {\r\n    try {\r\n      // Respuesta\r\n      const response = await fetch(\r\n        `https://rickandmortyapi.com/api/character/?page=${nextPage}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      setNextPage(nextPage + 1);\r\n      setFilteredPosts([].concat(filteredPosts, data.results));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const renderPosts = () => {\r\n    if (loading)\r\n      return (\r\n        <p style={{ color: \"white\", fontSize: \"2rem\" }}>Cargando posts...</p>\r\n      );\r\n    if (hasErrors)\r\n      return <p style={{ color: \"white\" }}>Posts no disponibles...</p>;\r\n\r\n    return filteredPosts.length === 0 ? (\r\n      <p style={{ color: \"white\", fontSize: \"2rem\" }}>\r\n        No se encontraron resultados...\r\n      </p>\r\n    ) : (\r\n      filteredPosts.map((post) => (\r\n        <Grid item className={classes.gridItem} key={post.id}>\r\n          <MediaCard post={post} />\r\n        </Grid>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <h1 className={classes.title}>Posts</h1>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.grid}\r\n      >\r\n        {renderPosts()}\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        fullWidth\r\n        onClick={fetchCharacters}\r\n        style={{ marginBottom: \"10px\" }}\r\n      >\r\n        Cargar más\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.posts.loading,\r\n  posts: state.posts.posts,\r\n  hasErrors: state.posts.hasErrors,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BodyPage);\r\n","import React from \"react\";\r\n\r\nconst Error = ({ mensaje }) => {\r\n  return <span className=\"error\">{mensaje}</span>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport Error from \"./Error.js\";\r\n\r\nconst formStyles = makeStyles({\r\n  root: {\r\n    width: \"40%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  form: {\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"white\",\r\n    },\r\n    \"& .MuiInputLabel-outlined\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-input\": {\r\n      color: \"white\",\r\n      borderColor: \"white\",\r\n    },\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n\r\n    color: \"white\",\r\n    margin: \"40px auto 0 auto\",\r\n  },\r\n});\r\n\r\nconst Contact = () => {\r\n  const classes = formStyles();\r\n\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validacion de inputs vacíos\r\n    if (\r\n      data.name.trim() === \"\" ||\r\n      data.email.trim() === \"\" ||\r\n      data.message.trim() === \"\"\r\n    ) {\r\n      setError(true);\r\n      return;\r\n    }\r\n    setError(false);\r\n    setData({\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n    });\r\n    console.log(\"Datos. cargados...\");\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        {error && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Error mensaje=\"Todos los campos son obligatorios\" />\r\n          </div>\r\n        )}\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h1 className=\"form-material__title\">Contacto</h1>\r\n        </div>\r\n        <TextField\r\n          type=\"text\"\r\n          id=\"name\"\r\n          label=\"Nombre *\"\r\n          margin=\"normal\"\r\n          variant=\"filled\"\r\n          autoFocus\r\n          fullWidth\r\n          name=\"name\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          type=\"email\"\r\n          id=\"email\"\r\n          label=\"Email *\"\r\n          margin=\"normal\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          name=\"email\"\r\n          value={data.email}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          type=\"text\"\r\n          id=\"message\"\r\n          label=\"Mensaje *\"\r\n          margin=\"normal\"\r\n          variant=\"filled\"\r\n          multiline\r\n          fullWidth\r\n          name=\"message\"\r\n          value={data.message}\r\n          onChange={handleChange}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Enviar\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchInfoPosts } from \"../actions/infoPostAction\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"40px auto 0 auto\",\r\n    maxWidth: \"500px\",\r\n    color: \"#f7eaea\",\r\n    padding: \"0 15px 80px 15px\",\r\n  },\r\n  header: {\r\n    \"& .header__details\": {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"flex-end\",\r\n    },\r\n    marginBottom: \"10px\",\r\n    \"& .header__details-social-item\": {\r\n      marginRight: \"10px\",\r\n    },\r\n  },\r\n  image: {\r\n    \"& .image__img\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  content: {\r\n    fontSize: \"18px\",\r\n    \"& .content__subtitle\": {\r\n      marginTop: \"40px\",\r\n    },\r\n  },\r\n});\r\n\r\nconst PostPage = ({ dispatch, info, loading, hasErrors }) => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const { name, status, species, type, gender, image, origin } = info;\r\n  let values = [];\r\n\r\n  for (var key in origin) {\r\n    values.push(origin[key]);\r\n  }\r\n\r\n  const nameOrigin = values[0];\r\n\r\n  const style = {\r\n    color: \"white\",\r\n    fontSize: \"2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchInfoPosts(id));\r\n  }, [dispatch, id]);\r\n\r\n  const renderInfoPosts = () => {\r\n    if (loading) return <p style={style}>Cargando información...</p>;\r\n    if (hasErrors) return <p style={style}>Posts no disponibles...</p>;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <div className=\"header__title\">\r\n            <h1>{name}</h1>\r\n          </div>\r\n          <div className=\"header__details\">\r\n            <div className=\"header__details-avatar\">\r\n              <Avatar>\r\n                <PersonIcon style={{ color: \"blue\" }} />\r\n              </Avatar>\r\n            </div>\r\n            <div className=\"header__details-social\">\r\n              <TwitterIcon\r\n                fontSize=\"large\"\r\n                className=\"header__details-social-item\"\r\n              />\r\n              <LinkedInIcon\r\n                fontSize=\"large\"\r\n                className=\"header__details-social-item\"\r\n              />\r\n              <FacebookIcon\r\n                fontSize=\"large\"\r\n                className=\"header__details-social-item\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.image}>\r\n          <img className=\"image__img\" src={image} alt=\"\" />\r\n        </div>\r\n        <div className={classes.content}>\r\n          <p>Status: {status}</p>\r\n          <p>Species: {species}</p>\r\n          <p>Type: {type || \"N/A\"}</p>\r\n          <p>Gender: {gender}</p>\r\n          <p>Origen: {nameOrigin}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return renderInfoPosts();\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.info.loading,\r\n  info: state.info.info,\r\n  hasErrors: state.info.hasErrors,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostPage);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"40px auto 0 auto\",\r\n    width: \"60%\",\r\n    color: \"white\",\r\n    fontSize: \"3rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"70vh\",\r\n  },\r\n});\r\n\r\nconst Error404 = () => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.root}>ERROR 404</div>;\r\n};\r\n\r\nexport default Error404;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport theme from \"./components/theme\";\r\nimport BodyPage from \"./pages/BodyPage\";\r\nimport Contact from \"./components/Contact\";\r\nimport PostPage from \"./pages/PostPage\";\r\nimport Error404 from \"./components/Error404\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Tomo el valor del input\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Navbar handleChange={handleChange} search={search} />\r\n        <Switch>\r\n          <Route exact path=\"/\" children={<BodyPage search={search} />} />\r\n          <Route\r\n            exact\r\n            path=\"/hooks-redux-posts/\"\r\n            children={<BodyPage search={search} />}\r\n          />\r\n          <Route exact path=\"/contact\" children={<Contact />} />\r\n          <Route exact path=\"/:id\" children={<PostPage />} />\r\n          <Route component={Error404} />\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  // La \"store\" tiene los estados(reducers) y las \"actions\"\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}